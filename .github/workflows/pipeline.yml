name: Simple python app

on:
  push:
    branches: [ "feature" ]
  
  pull_request:
    branches: [ "main" ]
    types: [ "closed" ]

jobs:
  deploy_maven_docker:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --no-cache-dir pylint bandit

    - name: Run Pylint (Code Quality Check)
      run: |
        pylint --fail-under=3 *.py

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python-3.10@master
      env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
          args: --severity-threshold=critical

    - name: Run Bandit for SAST
      run: |
          bandit -r . --severity-level high

    - name: dependencies for docker
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        failure-threshold: error

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Set env
      run: echo "DATE=$(date +%s)" >> $GITHUB_ENV

    - name: Set up cosign
      uses: sigstore/cosign-installer@main

    - name: Build and pust to registry
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags : sharon088/simple_python_app:${{ env.DATE }} 

    - name: Run Snyk to check Docker images for vulnerabilities
      uses: snyk/actions/docker@master
      if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: sharon088/simple_python_app:${{ env.DATE }}
        args: --severity-threshold=critical

    - name: Get image digest
      id: get_digest
      run: |
        IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' docker.io/sharon088/simple_python_app:${{ env.DATE }})
        echo "IMAGE_DIGEST=$IMAGE_DIGEST" >> $GITHUB_ENV

    - name: Sign container image with Cosign
      run: |
        cosign sign --yes --key env://COSIGN_KEY ${{ env.IMAGE_DIGEST }}
      env:
        COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

    - name: Verify container image signature with Cosign
      run: |
        docker pull docker.io/sharon088/simple_python_app:${{ env.DATE }}
        cosign verify --key env://COSIGN_PUBLIC_KEY ${{ env.IMAGE_DIGEST }}
      env:
        COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}

